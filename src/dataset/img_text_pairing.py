# -*- coding: utf-8 -*-
"""img_text_pairing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13VcCBJ6GPy3S_pa2bO79dXK_ZAlR-Btn
"""

import os
import shutil
import json
import pandas as pd

class ROCODataPreparer:
    def __init__(self,
                 radiology_path="/content/drive/MyDrive/roco_radiology_train1",
                 output_base="/content/drive/MyDrive/dataset",
                 img_col="name",
                 caption_col="caption"):

        self.radiology_path = radiology_path
        self.csv_path = os.path.join(radiology_path, 'traindata.csv')
        self.images_folder = os.path.join(radiology_path, 'images')
        self.output_base = output_base
        self.img_col = img_col
        self.caption_col = caption_col
        self.df = None

    def load_data(self):
        self.df = pd.read_csv(self.csv_path)
        print(f"Loaded {len(self.df)} rows.")
        print("CSV columns:", self.df.columns.tolist())

    def prepare_dataset_half(self):
        if self.df is None:
            raise ValueError("Data not loaded. Call load_data() first.")

        os.makedirs(self.output_base, exist_ok=True)
        #we only wanna half  the dataset
        half_len = len(self.df) // 2

        for idx, row in self.df.iloc[:half_len].iterrows():
            caption = str(row[self.caption_col]).strip()

            #in order not to have incomplete folders, we'll skip uncaptioned image, and unimaged captions
            #skip image
            if not caption:
                print(f"Skipping data{idx+1:03d}: Empty caption.")
                continue

            img_filename = row[self.img_col]
            src_img_path = os.path.join(self.images_folder, img_filename)

           #skip caption
            if not os.path.exists(src_img_path):
                print(f"Skipping data{idx+1:03d}: Image not found ({img_filename}).")
                continue

            folder_name = f"data{idx+1:03d}"
            folder_path = os.path.join(self.output_base, folder_name)
            os.makedirs(folder_path, exist_ok=True)

            dst_img_path = os.path.join(folder_path, img_filename)
            shutil.copy2(src_img_path, dst_img_path)
            #here we save the caption as a json file
            caption_dict = {"caption": caption}
            json_path = os.path.join(folder_path, 'caption.json')
            with open(json_path, 'w') as f:
                json.dump(caption_dict, f, indent=4)


# how to use example
if __name__ == "__main__":
    preparer = ROCODataPreparer()
    preparer.load_data()
    preparer.prepare_dataset_half()